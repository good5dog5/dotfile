#!/bin/bash

# Plex
function plex {
	# Variables
	NAME="Plex"
	PACKAGE=plexmediaserver
	LIST=plexmediaserver.list
	KEY='https://downloads.plex.tv/plex-keys/PlexSign.key'
	REPO='deb https://downloads.plex.tv/repo/deb ./public main'
	# Install
	display_header 'Begin '$NAME' installation'
	# Check if package is installed
	check_packages $PACKAGE
	EXITSTATUS=$?
	# If package is not installed
	if [ $EXITSTATUS = 1 ]; then
		display_info $NAME 'is not installed.'
		echo 'Proceeding'
		# Check if repository already exists
		display_info 'Checking if '$NAME' repository is already added...'
		if [ ! -f /etc/apt/sources.list.d/${LIST} ]; then
			# Add the repository signing key to be able to verify downloaded packages
			display_info 'Adding '$NAME' signing key to keyring...'
			# Download Key
			curl -sL $KEY | elevate_privilege "apt-key add -"
			# Done
			display_success "Installation of '$PACKAGE' complete."
			# Add the repository
			display_info 'Adding '$NAME' repository to software sources...'
			# Write repository to apt sources list file
			echo $REPO | elevate_privilege "tee /etc/apt/sources.list.d/${LIST}"
			# Update repository information
			display_info 'Updating repository information...'
			elevate_privilege "apt update -y"
			display_success "Installation of '$PACKAGE' complete."
		else
			display_info $NAME 'repository already in software sources.'
		fi
		# Install
		display_info 'Installing '$NAME'...'
		elevate_privilege "apt install -y $PACKAGE"
		# Done
		display_success "Installation of '$PACKAGE' complete."
		whiptail --title "Finished" --msgbox "Installation of $NAME complete." 8 64
		thirdparty
	else
		# Already installed
		display_info $NAME 'already installed.'
		whiptail --title "Finished" --msgbox "$NAME is already installed." 8 64
		thirdparty
	fi
}