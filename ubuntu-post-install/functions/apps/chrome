#!/bin/bash

# Install Chrome
function install_chrome { 
	# Variables
	PACKAGE=google-chrome-$@
	NAME="Google Chrome ($@)"
	# Check if package is installed
	check_packages $PACKAGE
	EXITSTATUS=$?
	# If package is not installed
	if [ $EXITSTATUS = 1 ]; then
		display_info $NAME 'is not installed.'
		echo 'Proceeding'
		display_info 'Downloading '$NAME'...'
		# Download Debian file that matches system architecture
		case `uname -i` in
			i386|i486|i586|i686)
				curl -O https://dl.google.com/linux/direct/${PACKAGE}_current_i386.deb
				;;
			x86_64)
				curl -O https://dl.google.com/linux/direct/${PACKAGE}_current_amd64.deb
				;;
			*)
				whiptail --title "Error." --msgbox "No remote packages available to download." 8 64
				;;
		esac
		# Install package(s)
		display_info 'Installing '$NAME'...'
		elevate_privilege "dpkg -i $PACKAGE*.deb"
		elevate_privilege "apt install -fy"
		# Cleanup and finish
		rm $PACKAGE*.deb
		# Done
		display_success "Installation of '$PACKAGE' complete."
		whiptail --title "Finished" --msgbox "Installation of $NAME complete." 8 64
		status=1
		thirdparty
	else
		# Already installed
		display_info $NAME 'already installed.'
		whiptail --title "Finished" --msgbox "$NAME is already installed." 8 64
		thirdparty
	fi
}

# Google Chrome
function chrome {
eval `resize` 
EXITSTATUS=$?
if [ $EXITSTATUS = 0 ]; then
	status="0"
	while [ "$status" -eq 0 ]; do
		VERSION=$(whiptail \
		--title "Google Chrome" \
		--radiolist "Which version of Chrome would you like to install?" \
		--ok-button "Install" \
		--cancel-button "Go Back" \
		$LINES $COLUMNS $(( $LINES - 12 )) \
		"stable"	"Stable build" ON \
		"beta"		"Beta build" OFF \
		"unstable"	"Unstable build" OFF \
		3>&1 1>&2 2>&3) 
		# Change to lower case and remove spaces.
		case "${VERSION}" in
			stable)
				install_chrome stable;
			;;
			beta)
				install_chrome beta;
			;;
			unstable)
				install_chrome unstable;
			;;
			*) status=1 
				thirdparty
			;;
		esac
	done
else
	thirdparty
fi
}