#!/bin/bash

# Check if command failed, if true abort
function check_fail {
	if [[ $EXITSTATUS != 0 ]]; then
		display_error "Last command returned an error; something may have went wrong. Aborting..." && sleep 2 && exit 99
	fi
}

# Check if package is installed
function check_packages() {
	dpkg-query -W --showformat='${Status}\n' $@ | grep "install ok installed"  &> /dev/null
}

# Check for and install required packages for this script set.
function check_dependencies {
	# Check list
	DEPS=$(dirname "$0")'/data/dependencies.list'
	for PACKAGE in $(cat $DEPS); do 
	# Check if package is installed
	check_packages $PACKAGE
	EXITSTATUS=$?
	if [ $EXITSTATUS = 1 ]; then
		display_warning "Dependency '$PACKAGE' is not present on your system and is required to continue."
		display_question 'Would you like to install it now? (Y)es, (N)o :' && read REPLY
		case $REPLY in
		# Positive action
		[Yy]* ) 
			display_info "Installing '$PACKAGE' installed. Proceeding."
			# Admin privileges
			sudo apt install -y $PACKAGE
			display_success "Package '$PACKAGE' installed. Proceeding."
			;;
		# Negative action
		[Nn]* )
			display_warning "Required dependencies are not present. :/"
			echo "Exiting..."
			exit 99
			;;
		# Error
		* )
			display_error '\aInvalid response, please try again.' && check_dependencies
			;;
		esac
	else
		echo "Dependency '$PACKAGE' is installed."
	fi
	done
	display_success "Dependencies are installed. :)"
	echo "Proceeding."
}

# Check which distribution the user is running
function check_distribution {
	EXITSTATUS=$(which lsb_release &>/dev/null; echo $?)
	if [[ $EXITSTATUS != 0 ]]; then
		display_error "\aCan't check which distribution you are using! Aborting."
		display_error " Aborting..." && sleep 3 && exit 99
	else
		if lsb_release -ds | grep -qE '(Ubuntu|Mint|elementary)'; then
			echo 'Current distribution is: '$(lsb_release -ds)
			display_success "Using Ubuntu or an Ubuntu-based distribution. :)"
			echo "Proceeding."
		elif lsb_release -ds | grep -q 'Debian'; then
			echo 'Current distribution is: '$(lsb_release -ds)
			display_warning "Using Debian; some functions may require tweaking. :/"
			echo "Proceeding nonetheless."
		else
			display_error "\aYou appear to be using a distribution which is not compatible with this script! :("
			display_error "Proceeding might break the system. Aborting..." && sleep 3 && exit 99
		fi
	fi
}

# Check if current user is in the sudo group
function check_privileges {
	# Check if user is root
	if [[ $EUID != 0 ]]; then
		EXITSTATUS=$(groups $USER | grep -q 'sudo'; echo $?)
		if [[ $EXITSTATUS != 0 ]]; then
			display_error "Your user account doesn't have authorization to use these scripts with this computer. Log in as root or as a user with admin privileges."
			display_info "Exiting..."
			sleep 5 && exit 99
		fi
		# Current user can use 'sudo'
		display_success "Current user has sudo privileges. :)"
		echo "Proceeding."
		SUDOCMD="sudo"
	else
		# Display warning about being root user
		display_warning "You are logged in as the root user. This is not recommended. :/"
		if (whiptail --title "Root User" --yesno "You are logged in as the root user. This is mostly fine, but not recommended.\n\nAre you sure you want to proceed?" 8 64) then
			echo "Proceeding."
			SUDOCMD=
		else
			echo "Exiting..."
			exit 99
		fi
	fi
}

function check {
	# Check sudo
	display_info "Checking administrative privileges of current user..."
	check_privileges
	# Check distro
	display_info "Checking distribution information..."
	check_distribution
	# Check dependencies
	display_info "Checking if dependencies are installed..."
	check_dependencies
	# Done
	display_success "Check complete."
}