#!/bin/bash
#
# accept user passwords and pass them to another command that requires elevated privilege

function elevate_privilege() {
	echo "Checking admin privileges..."
	# check if current user is root
	if [[ $EUID = 0 ]]; then
		display_warning "You are logged in as the root user."
		$@
	else
		# check sudo uptime to see if a password is needed
		sudostatus=$(sudo -n uptime 2>&1 | grep 'a password is required' | wc -l)
		if [ $sudostatus = 1 ]; then
			display_warning 'Requires admin privileges'
			PASSWORD=$(whiptail --passwordbox "\nRequires admin privileges to continue. \n\nPlease enter your password:\n" 12 48 --title "Password Required" 3>&1 1>&2 2>&3)
			EXITSTATUS=$?
			if [ $EXITSTATUS = 0 ]; then
				$SUDOCMD -S <<< "$PASSWORD" $@
				EXITSTATUS=$?
				if [ $EXITSTATUS = 1 ]; then
					display_error "Incorrect password. Aborting..."
					# Draw window
					whiptail --msgbox "Incorrect password. Sorry, try again." --title "Oops" 8 64
					main
				fi
			else
				display_error "User cancelled password prompt. Aborting..."
				# Draw window
				whiptail --msgbox "Password is required to proceed. Sorry, try again." --title "Oops" 8 64
				main
			fi
		else
			display_success "Admin privileges not required at this time."
			$SUDOCMD $@
		fi
	fi
}
